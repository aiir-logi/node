micronaut:
  application:
    name: node
  server:
    port: 8080
  router:
    static-resources:
      swagger:
        paths: classpath:META-INF/swagger
        mapping: /swagger/**
      redoc:
        paths: classpath:META-INF/swagger/views/redoc
        mapping: /redoc/**
      rapidoc:
        paths: classpath:META-INF/swagger/views/rapidoc
        mapping: /rapidoc/**
      swagger-ui:
        paths: classpath:META-INF/swagger/views/swagger-ui
        mapping: /swagger-ui/**
datasources:
  default:
    url: jdbc:postgresql://localhost:5432/postgres
    driverClassName: org.postgresql.Driver
    username: postgres
    password: postgres
    schema-generate: none
    dialect: POSTGRES
mongodb:
  uri: "mongodb://${MONGO_HOST:localhost}:${MONGO_PORT:27017}"
jackson:
  serialization:
    indentOutput: true
    writeDatesAsTimestamps: false
  deserialization:
    useBigIntegerForInts: true
    failOnUnknownProperties: false
  mapper:
    ACCEPT_CASE_INSENSITIVE_ENUMS: true
#  default:
#    url: jdbc:h2:mem:devDb;MVCC=TRUE;LOCK_TIMEOUT=10000;DB_CLOSE_ON_EXIT=FALSE
#    driverClassName: org.h2.Driver
#    username: sa
#    password: ''
#    schema-generate: CREATE_DROP
#    dialect: H2
#consul:
#  client:
#    registration:
#      enabled: true
#    defaultZone: "${CONSUL_HOST:localhost}:${CONSUL_PORT:8500}"
#kafka:
#  bootstrap:
#    servers: localhost:9093
